//querydsl 추가
buildscript {
	dependencies {
		classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.7'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.ewerk.gradle.plugins.querydsl'  version '1.0.10'
}


group = 'jpabook'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// 쿼리 파라미터 로그 남기기
	implementation("com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0")
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-collections"

	//querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0'


}

//querydsl 추가
//def querydslDir = 'src/main/generated'
def querydslDir = "src/main/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

//sourceSets {
//	main.java.srcDir querydslDir
//}

sourceSets {
	main{
		java{
			srcDirs = ['src/main/java', querydslDir ]
		}
	}
}


compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

clean {
	delete file(querydslDir)
}


tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}


tasks.named('test') {
	useJUnitPlatform()
}

test {
	useJUnitPlatform()
}
